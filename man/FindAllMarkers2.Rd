% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main_functions.R
\name{FindAllMarkers2}
\alias{FindAllMarkers2}
\title{Find markers for all groups}
\usage{
FindAllMarkers2(
  object,
  meta_data = NULL,
  group_column = NULL,
  replicate_column = NULL,
  method = "edger",
  min_rate = 0.05,
  min_fc = 1,
  verbosity = 1
)
}
\arguments{
\item{object}{Input object (of class Seurat, SingleCellExperiment, dgCMatrix, or matrix)}

\item{meta_data}{Data frame of meta data; can be NULL if object is Seurat or
SingleCellExperiment and cell identities are set; default is NULL}

\item{group_column}{String or integer indicating what column of meta_data to use as group indicator;
if NULL, the object cell identities are used; default is NULL}

\item{replicate_column}{String or integer indicating what column of meta_data
to use as replicate indicator; default is NULL}

\item{method}{DE method to use, one of edger, deseq, limma; default is edger}

\item{min_rate}{Remove genes from the results that have a detection rate below this threshold; uses the maximum of the groups being compared; default is 0.05}

\item{min_fc}{Remove genes from the results that have a log fold-change below this threshold; default is 1}

\item{verbosity}{Integer controlling how many messages the function prints;
0 is silent, 1 prints some messages, 2 prints more messages}
}
\value{
A data frame of results just as \code{\link[=findDE]{findDE()}}, but with 'feature_rank' column added
}
\description{
This calls \code{\link[=findDE]{findDE()}} with compare = 'each_vs_rest' and filters and orders the results.
}
\section{Details}{

After filtering, adjusted p-values (FDR) are recalculated per comparison.
}

\examples{
\donttest{
# Example data
counts <- DElegate::pbmc$counts
meta_data <- DElegate::pbmc$meta_data

# Use matrix and meta data as input
markers <- FindAllMarkers2(object = counts,
                           meta_data = meta_data,
                           group_column = 'celltype')

# Same with Seurat object as input
s <- Seurat::CreateSeuratObject(counts = counts, meta.data = meta_data)
Seurat::Idents(s) <- s$celltype
markers <- FindAllMarkers2(object = s)
}
}
